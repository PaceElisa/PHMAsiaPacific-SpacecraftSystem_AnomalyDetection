function XTable = fitrensembleConditionalConstraints2(XTable)
% Conditional constraints function for Regression Ensemble model
%
%  Input:
%      XTable: A table of hyperparameter values to try during the Bayesian
%       optimization process. Each row corresponds to one point, and each
%       column corresponds to one hyperparameter.
%  Output:
%      XTable: A table of hyperparameter values to try during the Bayesian
%       optimization process. The values are adjusted according to the
%       constraint function rules.
%
% Conditional constraints enforce one of the following two conditions:
% 1. When some hyperparameters have certain values, other hyperparameters
% are set to given values.
%  2. When some hyperparameters have certain values, other hyperparameters
%  are set to NaN or, for categorical hyperparameters, <undefined> values.
%
% Refer to the documentation for more information on <a href="matlab:helpview('stats', 'bayesopt_conditional_constraints')">conditional
% constraints</a> in Bayesian optimization.

% Auto-generated by MATLAB on 07-Mar-2025 18:32:41

conditionalVariableFcn  = @fitrtreeConditionalConstraints;
% Apply the weak learner's conditional constraints function.
if ~isempty(conditionalVariableFcn)
    % Save NumVariablesToSample if being optimized.
    if hasVariables(XTable, {'NumVariablesToSample'})
        NumVariablesToSample = XTable.NumVariablesToSample;
    end
    % Apply weak learner conditional constraints function. This wipes out NumVariablesToSample.
    XTable = conditionalVariableFcn(XTable);
    % Restore NumVariablesToSample.
    if hasVariables(XTable, {'NumVariablesToSample'})
        XTable.NumVariablesToSample = NumVariablesToSample;
    end
end
% Do not pass LearnRate if Method is Bag
if hasVariables(XTable, {'Method', 'LearnRate'})
    XTable.LearnRate(XTable.Method=='Bag') = NaN;
end
end

function XTable = fitrtreeConditionalConstraints(XTable)
% Always set NumVariablesToSample = NumPredictors. This ensures
% that single trees will not optimize NumVariablesToSample
% parameter, but the parameter will be available for enclosing
% ensembles to optimize it.
if hasVariables(XTable, {'NumVariablesToSample'})
    XTable.NumVariablesToSample(:) = 17;
end
end

function tf = hasVariables(Tbl, VarNames)
% Return true if table Tbl has all variables VarNames.
tf = all(ismember(VarNames, Tbl.Properties.VariableNames));
end